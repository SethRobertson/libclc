2002-09-05  Seth Robertson  <seth@winwood.sysdetect.com>

	* src/dict/dll.c (dll_create): Default order is ordered.

	* src/dict/dll.c (dll_create): Use bitwise and for bits, instead
	of addition.  Prevented an argument sanity check from occurring.

2002-08-29  Seth Robertson  <seth@startide.sysdetect.com>

	* include/fsma.h (struct __fsma_header): AHHHHH-HHHHAAAAAAAA!
	The reference counter was previously a short.  Worker, for reasons
	too complicated to get into, can have more than 2^16th lists.
	If we happen (not unlikely) to destroy down to 2^16 (e.g. zero)
	fsma thinks all allocators are free and promptly proceeds to return
	the memory to the system.  Memory was free'd but still in use.
	BAKA BAKA BAKA BAKA BAKA BAKA BAKA BAKA BAKA BAKA BAKA BAKA.

	* src/fsma/fsma.c (fsm_destroy): Perform assertion to verify we
	actually found the fsma allocator in the coalesce list.  Don't
	bother to realloc the coalesce list size down--it won't do no good
	nohow.

2002-08-27  Seth Robertson  <seth@startide.sysdetect.com>

	* src/dict/ht.c (ht_minimum): Serious and quite possibly
	bug-injecting misuse of a hint (cur_min).  The insert and delete
	routines were setting this to a bucket chain entry, not a table
	entry bucket (except when the insert routine had to perform a
	bucket chain expansion--when cur_min might be set to some other
	random value).  This usually was OK since bucket chain numbers are
	very low (0-3 range), but if a valid entry was in the table at
	slot zero or one, then ht_minimum might never see that item.

2002-08-14  James Tanis  <jtt@saint.sysdetect.com>

	* src/dict/ht.c (ht_minimum): Use cached minimum index as search start.
	(ht_do_insert): Update minimum index if less the current minimum.
	(ht_delete): Search for new minimum index if the index of the
	deleted node equals the current minimum.
	In addition add and obj_cnt so we don't try to perform expensive
	operations on empty hashes.

2002-05-13  James Tanis  <jtt@saint.sysdetect.com>

	* src/fsma/Makefile (BK_LARGE_LIB): Shared libfsma no longer
	breaks with libtool (on both linux and bsd). 

2002-05-10  Alexander Dupuy  <dupuy@sysdetect.com>

	* src/fsma/Makefile (BK_LARGE_LIB): back out shared libfsma;
	this breaks libtool in a strange way that requires investigation

2002-05-10  James Tanis  <jtt@winwood.sysdetect.com>

	* src/fsma/fsma.c: Formatting and simplify coalesce code.

	* src/fsma/Makefile (BK_LARGE_LIB): Make libfsma shared.

	* src/dict/bst.c (bst_redelete): Improve efficiency by avoiding
	unnecessary checks and recusive calls.

2002-02-22  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/dict.h (DICT_NUKE): delete contents and dict itself
	(_DICT_NUKE_WORK_LOOP): common code for DICT_NUKE, DICT_NUKE_CONTENTS

	* src/dict/dictimpl.h (HANDLE_ERROR): Eliminate unused id argument
	[use BK_FUNCNAME  here instead if you need it for debugging]

2002-01-31  Alexander Dupuy  <dupuy@sysdetect.com>

	* src/dict/Makefile (BK_LARGE_LIB): use ${LIBEXT} for libtool build

2002-01-09  Alexander Dupuy  <dupuy@sysdetect.com>

	* src/fsma/fsma.c: INSIGHT->INSURE

	* src/dict/ht.c: disable SWITCH_HT_TO_DLL hack - probably not needed

	* include/clchack.h: get rid of obsolete insure/bsdos2 -specific hacks

2001-11-05  Seth Robertson  <seth@startide.sysdetect.com>

	* src/dict/*: Change _iterate/nextobj interface to be re-entrant.
	NOTE THIS IS ONLY AN INTERFACE CHANGE--IT IS STILL NOT RE-ENTRANT.
	However, at least it can be pretty easily converted to re-entrant
	without affecting anyone else.

2001-11-02  Alexander Dupuy  <dupuy@sysdetect.com>

	* src/dict/bst.c (find_object_in_tree): fix bug in delete or nested
	iteration of bst with non-unique keys

2001-09-30  Seth Robertson  <seth@yeah.baka.org>

	* include/hpq.h: Create typedef for pq comparison function

2001-09-17  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/fsma.h: avoid Linux gcc warnings about signed vs. unsigned

	* include/fsma.c: avoid Linux gcc warnings about signed vs. unsigned

2001-08-16  Seth Robertson  <seth@yeah.baka.org>

	* include/dict.h (DICT_NUKE_CONTENTS): Generic macro to spin through
	CLC using user code to nuke each item.

2001-07-07  Seth Robertson  <seth@yeah.baka.org>

	* (ERRNO): errno shadows global errno which is sometimes a manifest constant
	to a function or something silly like that.

2001-07-06  Seth Robertson  <seth@yeah.baka.org>

	* Change error handling.  Specifically, get rid of errno pointer
	and create functions to access the error value as a string.  This
	supports automatic reentrancy except from during dictionary creation
	(which is either programmer error or an out-of-memory condition).

	Add DICT_NOCOALESCE to allow reentrancy.

	Delete DICT_RETURN_ERROR -- never exit.
	
	Change indention to BAKA style.

2001-07-05  Seth Robertson  <seth@yeah.baka.org>

	* src/dict/htimpl.h: Fix indention

	* src/fsma/fsma.c (fsm_destroy): Nuke __ARGS() && cleanup c++ warnings

	* include/ bst.h dict.h dll.h fsma.h hpq.h ht.h pq.h: Sanify indention style.
	Nuke __ARGS() -- all compilers are ANSI compatible && need function prototypes

